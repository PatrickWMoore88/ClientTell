extends layout

block content
    h1.text-center.mt-4(style="padding: 50px;")= title
    div
      form(action=`/update/clients/${client.id}`, method="POST", class="card", style="padding: 2rem; border: 1px solid #ddd; border-radius: 8px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); margin-bottom: 2rem;")
        div.mb-3
          label.form-label(for="name") Name:
          input.form-control(type="text", name="name", required, value=client.name)
        div.mb-3
          label.form-label(for="email") Email:
          input.form-control(type="email", name="email", value=client.email)
        div.mb-3
          label.form-label(for="phone") Phone:
          input.form-control(type="tel", name="phone", value=client.phone, pattern="^[0-9]{3}-[0-9]{3}-[0-9]{4}$", required)
        div.mb-3
          label.form-label(for="company_name") Company:
          input.form-control(type="text", name="company_name", value=client.company_name)
        div.mb-3
          label.form-label(for="website_url") Website URL:
          input.form-control(type="text", name="website_url", value=client.website_url)
        div.mb-3
          label.form-label(for="status") Status:
          select.form-control(name="status", required)
            option(value=client.status) #{client.status}
            option(value="Lead") Lead
            option(value="Active") Active
            option(value="Inactive") Inactive
        div.mb-3
          label.form-label(for="created_at") Client Since:
          input.form-control(type="date", name="created_at",, id="clientSinceDateInput", value=client.created_at)
        div.text-end
          button.btn.btn-info(type="submit", class="mt-3") Save
          a(href=`/get/clients/${client.id}`, class="btn btn-info mt-3 ms-3") Cancel

block scripts
  script.
    document.addEventListener("DOMContentLoaded", function () {
      const clientSinceDateInput = document.getElementById("clientSinceDateInput");

      clientSinceDateInput.addEventListener("click", function () {
        this.showPicker ? this.showPicker() : this.focus();
      });
    });
